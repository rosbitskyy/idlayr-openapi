/*
 * Copyright (c) 2025.
 * @Author: Rosbitskyy Ruslan
 * @email: rosbitskyy@gmail.com
 * @license Licensed under the MIT License (MIT)
 */

/*
 * IDLayr Passkeys
 * Base API definition for IDLayr Passkey Server 
 *
 * The version of the OpenAPI document: 1.0.12
 * Contact: help@idlayr.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.WebAuthnGetAssertionRequest;
import org.openapitools.client.model.WebAuthnGetAssertionResponse;
import org.openapitools.client.model.WebAuthnMakeCredentialRequest;
import org.openapitools.client.model.WebAuthnMakeCredentialResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ValidationApi
 */
@Disabled
public class ValidationApiTest {

    private final ValidationApi api = new ValidationApi();

    /**
     * Complete autofill authentication
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void passkeyAutofillCompletePostTest() throws ApiException {
        WebAuthnGetAssertionResponse webAuthnGetAssertionResponse = null;
        api.passkeyAutofillCompletePost(webAuthnGetAssertionResponse);
        // TODO: test validations
    }

    /**
     * Init autofill authentication (usernameless)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void passkeyAutofillInitPostTest() throws ApiException {
        WebAuthnGetAssertionRequest response = api.passkeyAutofillInitPost();
        // TODO: test validations
    }

    /**
     * Complete passkey authentication
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUidPasskeysAuthCompletePostTest() throws ApiException {
        String uid = null;
        WebAuthnGetAssertionResponse webAuthnGetAssertionResponse = null;
        api.usersUidPasskeysAuthCompletePost(uid, webAuthnGetAssertionResponse);
        // TODO: test validations
    }

    /**
     * Start passkey authentication
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUidPasskeysAuthInitPostTest() throws ApiException {
        String uid = null;
        WebAuthnGetAssertionRequest response = api.usersUidPasskeysAuthInitPost(uid);
        // TODO: test validations
    }

    /**
     * Complete passkey enrollment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUidPasskeysEnrolCompletePostTest() throws ApiException {
        String uid = null;
        WebAuthnMakeCredentialResponse webAuthnMakeCredentialResponse = null;
        api.usersUidPasskeysEnrolCompletePost(uid, webAuthnMakeCredentialResponse);
        // TODO: test validations
    }

    /**
     * Start passkey enrollment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUidPasskeysEnrolInitPostTest() throws ApiException {
        String uid = null;
        WebAuthnMakeCredentialRequest response = api.usersUidPasskeysEnrolInitPost(uid);
        // TODO: test validations
    }

}
