/*
 * Copyright (c) 2025.
 * @Author: Rosbitskyy Ruslan
 * @email: rosbitskyy@gmail.com
 * @license Licensed under the MIT License (MIT)
 */

/*
 * IDLayr Passkeys
 * Base API definition for IDLayr Passkey Server 
 *
 * The version of the OpenAPI document: 1.0.12
 * Contact: help@idlayr.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.WebAuthnMakeCredentialRequestAuthenticatorSelection;
import org.openapitools.client.model.WebAuthnMakeCredentialRequestExcludeCredentialsInner;
import org.openapitools.client.model.WebAuthnMakeCredentialRequestPubKeyCredParamsInner;
import org.openapitools.client.model.WebAuthnMakeCredentialRequestRp;
import org.openapitools.client.model.WebAuthnMakeCredentialRequestUser;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WebAuthnMakeCredentialRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-23T11:56:01.733301+03:00[Europe/Sofia]", comments = "Generator version: 7.7.0")
public class WebAuthnMakeCredentialRequest {
  public static final String SERIALIZED_NAME_CHALLENGE = "challenge";
  @SerializedName(SERIALIZED_NAME_CHALLENGE)
  private String challenge;

  public static final String SERIALIZED_NAME_RP = "rp";
  @SerializedName(SERIALIZED_NAME_RP)
  private WebAuthnMakeCredentialRequestRp rp;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private WebAuthnMakeCredentialRequestUser user;

  public static final String SERIALIZED_NAME_PUB_KEY_CRED_PARAMS = "pubKeyCredParams";
  @SerializedName(SERIALIZED_NAME_PUB_KEY_CRED_PARAMS)
  private List<WebAuthnMakeCredentialRequestPubKeyCredParamsInner> pubKeyCredParams = new ArrayList<>();

  public static final String SERIALIZED_NAME_TIMEOUT = "timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  private Integer timeout;

  public static final String SERIALIZED_NAME_EXCLUDE_CREDENTIALS = "excludeCredentials";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_CREDENTIALS)
  private List<WebAuthnMakeCredentialRequestExcludeCredentialsInner> excludeCredentials = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTHENTICATOR_SELECTION = "authenticatorSelection";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATOR_SELECTION)
  private WebAuthnMakeCredentialRequestAuthenticatorSelection authenticatorSelection;

  public static final String SERIALIZED_NAME_ATTESTATION = "attestation";
  @SerializedName(SERIALIZED_NAME_ATTESTATION)
  private String attestation;

  public WebAuthnMakeCredentialRequest() {
  }

  public WebAuthnMakeCredentialRequest challenge(String challenge) {
    this.challenge = challenge;
    return this;
  }

  /**
   * Get challenge
   * @return challenge
   */
  @javax.annotation.Nullable
  public String getChallenge() {
    return challenge;
  }

  public void setChallenge(String challenge) {
    this.challenge = challenge;
  }


  public WebAuthnMakeCredentialRequest rp(WebAuthnMakeCredentialRequestRp rp) {
    this.rp = rp;
    return this;
  }

  /**
   * Get rp
   * @return rp
   */
  @javax.annotation.Nullable
  public WebAuthnMakeCredentialRequestRp getRp() {
    return rp;
  }

  public void setRp(WebAuthnMakeCredentialRequestRp rp) {
    this.rp = rp;
  }


  public WebAuthnMakeCredentialRequest user(WebAuthnMakeCredentialRequestUser user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   * @return user
   */
  @javax.annotation.Nullable
  public WebAuthnMakeCredentialRequestUser getUser() {
    return user;
  }

  public void setUser(WebAuthnMakeCredentialRequestUser user) {
    this.user = user;
  }


  public WebAuthnMakeCredentialRequest pubKeyCredParams(List<WebAuthnMakeCredentialRequestPubKeyCredParamsInner> pubKeyCredParams) {
    this.pubKeyCredParams = pubKeyCredParams;
    return this;
  }

  public WebAuthnMakeCredentialRequest addPubKeyCredParamsItem(WebAuthnMakeCredentialRequestPubKeyCredParamsInner pubKeyCredParamsItem) {
    if (this.pubKeyCredParams == null) {
      this.pubKeyCredParams = new ArrayList<>();
    }
    this.pubKeyCredParams.add(pubKeyCredParamsItem);
    return this;
  }

  /**
   * Get pubKeyCredParams
   * @return pubKeyCredParams
   */
  @javax.annotation.Nullable
  public List<WebAuthnMakeCredentialRequestPubKeyCredParamsInner> getPubKeyCredParams() {
    return pubKeyCredParams;
  }

  public void setPubKeyCredParams(List<WebAuthnMakeCredentialRequestPubKeyCredParamsInner> pubKeyCredParams) {
    this.pubKeyCredParams = pubKeyCredParams;
  }


  public WebAuthnMakeCredentialRequest timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

  /**
   * Get timeout
   * @return timeout
   */
  @javax.annotation.Nullable
  public Integer getTimeout() {
    return timeout;
  }

  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }


  public WebAuthnMakeCredentialRequest excludeCredentials(List<WebAuthnMakeCredentialRequestExcludeCredentialsInner> excludeCredentials) {
    this.excludeCredentials = excludeCredentials;
    return this;
  }

  public WebAuthnMakeCredentialRequest addExcludeCredentialsItem(WebAuthnMakeCredentialRequestExcludeCredentialsInner excludeCredentialsItem) {
    if (this.excludeCredentials == null) {
      this.excludeCredentials = new ArrayList<>();
    }
    this.excludeCredentials.add(excludeCredentialsItem);
    return this;
  }

  /**
   * Get excludeCredentials
   * @return excludeCredentials
   */
  @javax.annotation.Nullable
  public List<WebAuthnMakeCredentialRequestExcludeCredentialsInner> getExcludeCredentials() {
    return excludeCredentials;
  }

  public void setExcludeCredentials(List<WebAuthnMakeCredentialRequestExcludeCredentialsInner> excludeCredentials) {
    this.excludeCredentials = excludeCredentials;
  }


  public WebAuthnMakeCredentialRequest authenticatorSelection(WebAuthnMakeCredentialRequestAuthenticatorSelection authenticatorSelection) {
    this.authenticatorSelection = authenticatorSelection;
    return this;
  }

  /**
   * Get authenticatorSelection
   * @return authenticatorSelection
   */
  @javax.annotation.Nullable
  public WebAuthnMakeCredentialRequestAuthenticatorSelection getAuthenticatorSelection() {
    return authenticatorSelection;
  }

  public void setAuthenticatorSelection(WebAuthnMakeCredentialRequestAuthenticatorSelection authenticatorSelection) {
    this.authenticatorSelection = authenticatorSelection;
  }


  public WebAuthnMakeCredentialRequest attestation(String attestation) {
    this.attestation = attestation;
    return this;
  }

  /**
   * Get attestation
   * @return attestation
   */
  @javax.annotation.Nullable
  public String getAttestation() {
    return attestation;
  }

  public void setAttestation(String attestation) {
    this.attestation = attestation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebAuthnMakeCredentialRequest webAuthnMakeCredentialRequest = (WebAuthnMakeCredentialRequest) o;
    return Objects.equals(this.challenge, webAuthnMakeCredentialRequest.challenge) &&
        Objects.equals(this.rp, webAuthnMakeCredentialRequest.rp) &&
        Objects.equals(this.user, webAuthnMakeCredentialRequest.user) &&
        Objects.equals(this.pubKeyCredParams, webAuthnMakeCredentialRequest.pubKeyCredParams) &&
        Objects.equals(this.timeout, webAuthnMakeCredentialRequest.timeout) &&
        Objects.equals(this.excludeCredentials, webAuthnMakeCredentialRequest.excludeCredentials) &&
        Objects.equals(this.authenticatorSelection, webAuthnMakeCredentialRequest.authenticatorSelection) &&
        Objects.equals(this.attestation, webAuthnMakeCredentialRequest.attestation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(challenge, rp, user, pubKeyCredParams, timeout, excludeCredentials, authenticatorSelection, attestation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebAuthnMakeCredentialRequest {\n");
    sb.append("    challenge: ").append(toIndentedString(challenge)).append("\n");
    sb.append("    rp: ").append(toIndentedString(rp)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    pubKeyCredParams: ").append(toIndentedString(pubKeyCredParams)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    excludeCredentials: ").append(toIndentedString(excludeCredentials)).append("\n");
    sb.append("    authenticatorSelection: ").append(toIndentedString(authenticatorSelection)).append("\n");
    sb.append("    attestation: ").append(toIndentedString(attestation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("challenge");
    openapiFields.add("rp");
    openapiFields.add("user");
    openapiFields.add("pubKeyCredParams");
    openapiFields.add("timeout");
    openapiFields.add("excludeCredentials");
    openapiFields.add("authenticatorSelection");
    openapiFields.add("attestation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WebAuthnMakeCredentialRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WebAuthnMakeCredentialRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebAuthnMakeCredentialRequest is not found in the empty JSON string", WebAuthnMakeCredentialRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WebAuthnMakeCredentialRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebAuthnMakeCredentialRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("challenge") != null && !jsonObj.get("challenge").isJsonNull()) && !jsonObj.get("challenge").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `challenge` to be a primitive type in the JSON string but got `%s`", jsonObj.get("challenge").toString()));
      }
      // validate the optional field `rp`
      if (jsonObj.get("rp") != null && !jsonObj.get("rp").isJsonNull()) {
        WebAuthnMakeCredentialRequestRp.validateJsonElement(jsonObj.get("rp"));
      }
      // validate the optional field `user`
      if (jsonObj.get("user") != null && !jsonObj.get("user").isJsonNull()) {
        WebAuthnMakeCredentialRequestUser.validateJsonElement(jsonObj.get("user"));
      }
      if (jsonObj.get("pubKeyCredParams") != null && !jsonObj.get("pubKeyCredParams").isJsonNull()) {
        JsonArray jsonArraypubKeyCredParams = jsonObj.getAsJsonArray("pubKeyCredParams");
        if (jsonArraypubKeyCredParams != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pubKeyCredParams").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pubKeyCredParams` to be an array in the JSON string but got `%s`", jsonObj.get("pubKeyCredParams").toString()));
          }

          // validate the optional field `pubKeyCredParams` (array)
          for (int i = 0; i < jsonArraypubKeyCredParams.size(); i++) {
            WebAuthnMakeCredentialRequestPubKeyCredParamsInner.validateJsonElement(jsonArraypubKeyCredParams.get(i));
          };
        }
      }
      if (jsonObj.get("excludeCredentials") != null && !jsonObj.get("excludeCredentials").isJsonNull()) {
        JsonArray jsonArrayexcludeCredentials = jsonObj.getAsJsonArray("excludeCredentials");
        if (jsonArrayexcludeCredentials != null) {
          // ensure the json data is an array
          if (!jsonObj.get("excludeCredentials").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `excludeCredentials` to be an array in the JSON string but got `%s`", jsonObj.get("excludeCredentials").toString()));
          }

          // validate the optional field `excludeCredentials` (array)
          for (int i = 0; i < jsonArrayexcludeCredentials.size(); i++) {
            WebAuthnMakeCredentialRequestExcludeCredentialsInner.validateJsonElement(jsonArrayexcludeCredentials.get(i));
          };
        }
      }
      // validate the optional field `authenticatorSelection`
      if (jsonObj.get("authenticatorSelection") != null && !jsonObj.get("authenticatorSelection").isJsonNull()) {
        WebAuthnMakeCredentialRequestAuthenticatorSelection.validateJsonElement(jsonObj.get("authenticatorSelection"));
      }
      if ((jsonObj.get("attestation") != null && !jsonObj.get("attestation").isJsonNull()) && !jsonObj.get("attestation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attestation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attestation").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebAuthnMakeCredentialRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebAuthnMakeCredentialRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebAuthnMakeCredentialRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebAuthnMakeCredentialRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<WebAuthnMakeCredentialRequest>() {
           @Override
           public void write(JsonWriter out, WebAuthnMakeCredentialRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebAuthnMakeCredentialRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WebAuthnMakeCredentialRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WebAuthnMakeCredentialRequest
   * @throws IOException if the JSON string is invalid with respect to WebAuthnMakeCredentialRequest
   */
  public static WebAuthnMakeCredentialRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebAuthnMakeCredentialRequest.class);
  }

  /**
   * Convert an instance of WebAuthnMakeCredentialRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

